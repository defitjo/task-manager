{"version":3,"sources":["components/design/LoginNav.js","store/action_creator/authenticationAction.js","components/design/LogoutNav.js","components/design/Menu.js","components/home/Alert.js","components/tasks/TaskDesign.js","components/tasks/TaskOrder.js","components/home/Home.js","components/tasks/NewTask.js","store/action_creator/taskAction.js","components/authentication/Join.js","components/authentication/Login.js","components/tasks/TaskInfo.js","App.js","serviceWorker.js","store/reducers/authenticationReducer.js","store/reducers/taskReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","logout","getState","_ref3","getFirebase","auth","signOut","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","LogoutNav","state","firebase","profile","links","uid","design_LoginNav","design_LogoutNav","Alerts","alerts","map","alert","key","id","user","description","time","toDate","toDateString","TaskDesign","_ref","task","title","userFirstName","userLastName","addedAt","TaskOrder","tasks","tasks_TaskDesign","Home","_this$props","this","Alert","tasks_TaskOrder","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","NewTask","handleSubmit","e","preventDefault","_this","newTask","history","push","handleChange","setState","Object","defineProperty","target","value","onSubmit","htmlFor","onChange","rows","getFirestore","userId","add","objectSpread","firstName","lastName","Date","catch","error","Join","email","password","join","authError","creds","newUser","createUserWithEmailAndPassword","response","doc","set","Login","login","info","_ref2","signInWithEmailAndPassword","ownProps","match","params","data","App","design_Menu","exact","path","component","TaskInfo","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","concat","fetch","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initState","authenticationReducer","arguments","length","undefined","action","message","taskReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a46f68bd.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../../store/action_creator/authenticationAction';\n\nconst LoginNav = (props) => {\n  return (\n    <div className=\"right menu\">\n      <NavLink className=\"item\" to='/new'>\n        Create Task\n      </NavLink>\n      <NavLink to='/login' onClick={props.logout} className=\"item\">\n        Log-out\n      </NavLink>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => dispatch(logout())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(LoginNav);\n","export const join = (newUser) => {\n  // getFirebase = login/sign up new user\n  // getFirestore = interact with db\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then(response => {\n      return firestore.collection('users').doc(response.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName\n      });\n    }).then(() => {\n      dispatch({ type: 'JOIN_SUCCESSFULLY' });\n    }).catch((error) => {\n      dispatch({ type: 'ERROR_JOINING', error });\n    });\n  }\n}\n\nexport const login = (info) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(\n      info.email,\n      info.password\n    ).then(() => {\n      dispatch({ type: 'SUCCESSFUL_LOGIN' })\n    }).catch((error) => {\n      dispatch({ type: 'ERROR_LOGGING_IN', error});\n    });\n  }\n}\n\nexport const logout = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SUCCESSFUL_LOGOUT'})\n    });\n  }\n}\n ","import React from \"react\";\nimport { NavLink } from 'react-router-dom';\n\nconst LogoutNav = () => {\n  return (\n    <div className=\"right menu\">\n      <NavLink to='/login' className=\"item\">\n        Log-in\n      </NavLink>\n      <NavLink to='/join' className=\"item\">\n        Sign Up\n      </NavLink>\n    </div>\n  );\n};\n\nexport default LogoutNav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LoginNav from './LoginNav';\nimport LogoutNav from './LogoutNav';\n\nconst Menu = (props) => {\n  const { auth, profile } = props;\n  const links = auth.uid ? <LoginNav profile={profile} /> : <LogoutNav />;\n\n  return (\n    <nav className=\"ui blue inverted menu\">\n      <Link to='/' className=\"active item\">\n        Tasker\n      </Link>\n      <div className=\"right menu\">\n        {links} \n      </div>\n    </nav>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Menu)\n","import React from 'react';\n\nconst Alerts = (props) => {\n  const { alerts } = props;\n  return (\n    <div className=\"ui card centered\">\n      <div className=\"content\">\n        <div className=\"ui sub center aligned large header\">What's New</div>\n        <div className=\"ui small feed\">\n          <div className=\"event\">\n            <div className=\"content\">\n              <div className=\"summary\">\n                { alerts && alerts.map(alert => {\n                  return <li className=\"ui list\" key={alert.id}>\n                    <span className=\"alert-user\">{alert.user} </span>\n                    <span>{alert.description}</span>\n                    <div className=\"alert-date\">{alert.time.toDate().toDateString()}</div>\n                  </li>\n                }) }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Alerts;\n","import React from 'react';\n\nconst TaskDesign = ({task}) => {\n  return (\n    <div className=\"ui cards\">\n      <div className=\"ui link fluid card\">\n        <div className=\"content\">\n          <div className=\"header\">{task.title}</div>\n          <div className=\"meta\">New task by {task.userFirstName} {task.userLastName}</div>\n          <div className=\"description\">\n            <span>{task.addedAt.toDate().toDateString()}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TaskDesign;\n","import React from 'react';\nimport TaskDesign from './TaskDesign';\nimport { Link } from 'react-router-dom';\n\nconst TaskOrder = ({tasks}) => {\n  return (\n    <div className=\"ui fluid card\">\n      <div className=\"content\">\n        <div className=\"center aligned header\">\n          <h3 className=\"header-3\">Tasks</h3>\n        </div>\n      </div>\n      <div className=\"content\">\n        <h4 className=\"ui sub center aligned header\">Activity</h4>\n        <div className=\"ui small feed\">\n          <div className=\"event\">\n            <div className=\"content\">\n              <div className=\"summary\">\n                { tasks && tasks.map(task => {\n                  return <Link to={'/task/' + task.id} key={task.id}>\n                    <TaskDesign task={task} />\n                  </Link>\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TaskOrder;\n\n","import React, { Component } from 'react';\nimport Alert from './Alert';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\nimport { compose } from 'redux';\nimport TaskOrder from '../tasks/TaskOrder';\n\nclass Home extends Component {\n  render() {\n    const { tasks, auth, alerts } = this.props;\n    if (!auth.uid) return <Redirect to='/login' />\n\n    return (\n      <div className=\"ui stackable centered padded grid container\">\n        <div className=\"three column row\">\n          <div className=\"four wide column\">\n            <Alert alerts={alerts} />\n          </div>\n          <div className=\"one wide column\"></div>\n          <div className=\"six wide column\">\n            <div className=\"home\">\n              <div>\n                <TaskOrder tasks={tasks} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tasks: state.firestore.ordered.tasks,\n    auth: state.firebase.auth,\n    alerts: state.firestore.ordered.alerts\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'tasks', orderBy: ['addedAt', 'desc'] },\n    { collection: 'alerts', limit: 4, orderBy: ['time', 'desc'] }\n  ])\n)(Home);\n","import React, { Component } from 'react';\nimport { newTask } from '../../store/action_creator/taskAction';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass NewTask extends Component {\n  state = {\n    title: \"\",\n    description: \"\"\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.newTask(this.state);\n    this.props.history.push('/');\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to=\"/login\" />\n    return (\n      <div className=\"ui two column centered grid\">\n        <div className=\"row\">\n          <div className=\"two column wide\">\n            <form className=\"ui form\" onSubmit={this.handleSubmit}>\n              <h3 className=\"ui dividing header\">Create Task</h3>\n              <div className=\"required field\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                <label htmlFor=\"description\">Task Description</label>\n                <textarea rows=\"3\" id=\"description\" onChange={this.handleChange} />\n\n                <div>\n                  <button id=\"new-task-button\" className=\"ui positive right labeled icon button\">\n                    <i className=\"tasks icon\"></i>\n                    Submit\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    newTask: (task) => dispatch(newTask(task))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTask);\n","export const newTask = (task) => {\n  return (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const userId = getState().firebase.auth.uid;\n    firestore.collection('tasks').add({\n      ...task,\n      userFirstName: profile.firstName,\n      userLastName: profile.lastName,\n      userId: userId,\n      addedAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'TASK_CREATED'});\n    }).catch(error => {\n      dispatch({ type: 'TASK_NOT_CREATED' }, error);\n    });\n  }\n};\n\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { join } from '../../store/action_creator/authenticationAction';\n\nclass Join extends Component {\n  state = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.join(this.state);\n  }\n  handleChange = (e) => {\n    this.setState({\n    [e.target.id]: e.target.value\n    })\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' />\n    return (\n      <div className=\"ui two column centered grid\">\n        <div className=\"row\">\n          <div className=\"two column wide\">\n            <form className=\"ui form\" onSubmit={this.handleSubmit}>\n              <h3 className=\"ui dividing header\">Join Task Manager</h3>\n              <div className=\"required field\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n\n                <div>\n                  <button id=\"join-button\" className=\"ui positive right labeled icon button\">\n                    <i className=\"sign-in icon\"></i>\n                    Join\n                  </button>\n                  <div className=\"ui red center\">\n                    { authError ? <p>{authError}</p> : null }\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    join: (creds) => dispatch(join(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Join)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { login } from '../../store/action_creator/authenticationAction';\nimport { Redirect } from 'react-router-dom';\n\nclass Login extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.login(this.state);\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' />\n    return (\n      <div className=\"ui two column centered grid\">\n        <div className=\"row\">\n          <div className=\"two column wide\">\n            <form className=\"ui form\" onSubmit={this.handleSubmit}>\n              <h3 className=\"ui dividing header\">Login</h3>\n              <div className=\"required field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                <div>\n                  <button id=\"login-button\" className=\"ui positive right labeled icon button\">\n                    <i className=\"sign-in icon\"></i>\n                    Login\n                  </button>\n                  <div className=\"ui red center\">\n                    {authError ? <p>{authError}</p> : null}\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (creds) => dispatch(login(creds)) \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\n\nconst TaskInfo = (props) => {\n  const { task, auth } = props;\n  if (!auth.uid) return <Redirect to='/login' />\n  if (task) {\n    return (\n      <div id=\"task-info-container\" className=\"ui grid container\">\n        <div id=\"task-info\" className=\"five wide column centered\">\n          <div className=\"ui large header\">\n            {task.title}\n          </div>\n          <div className=\"description\">\n            <p id=\"task-description\">{task.description}</p>\n          </div>\n          <div id=\"task-info-user\" className=\"meta\">\n            <p>New task by {task.userFirstName} {task.userLastName}</p>\n            <p id=\"task-info-date\">{task.addedAt.toDate().toDateString()}</p>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"ui grid container\">\n        <div className=\"two wide column centered\">\n          <div className=\"header\">Loading...</div>\n        </div>  \n      </div>\n    )\n  }     \n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const tasks = state.firestore.data.tasks;\n  const task = tasks ? tasks[id] : null\n\n  return {\n    task: task,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{\n    collection: 'tasks'\n  }])\n)(TaskInfo);\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Menu from './components/design/Menu';\nimport Home from './components/home/Home';\nimport NewTask from './components/tasks/NewTask';\nimport Join from './components/authentication/Join';\nimport Login from './components/authentication/Login';\nimport TaskInfo from './components/tasks/TaskInfo';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Menu />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/new' component={NewTask} />\n            <Route path='/join' component={Join} />\n            <Route path='/login' component={Login} />\n            <Route path='/task/:id' component={TaskInfo} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authenticationReducer = (state = initState, action) => {\n  switch(action.type) {\n    case 'JOIN_SUCCESSFULLY':\n      return {\n        ...state,\n        authError: null\n      }\n    case 'ERROR_JOINING':\n      return {\n        ...state,\n        authError: action.error.message\n      }\n    case 'SUCCESSFUL_LOGIN':\n      return {\n        ...state,\n        authError: null\n      }\n    case 'ERROR_LOGGING_IN':\n      return {\n        ...state,\n        authError: 'Login Failed'\n      }\n    case 'SUCCESSFUL_LOGOUT':\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport default authenticationReducer;\n","const initState = {}\n\nconst taskReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'TASK_CREATED':\n      return state;\n    case 'TASK_NOT_CREATED':\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default taskReducer;\n","import { combineReducers } from 'redux';\nimport {firestoreReducer} from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\nimport authenticationReducer from \"./authenticationReducer\";\nimport taskReducer from \"./taskReducer\";\n\nconst rootReducer = combineReducers({\n  auth: authenticationReducer,\n  task: taskReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;\n\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialize Firebase\nvar config = {\n  apiKey: \"AIzaSyBQJQrjhbTXqc5X5TWcUhh-iKPp5LkvNKY\",\n  authDomain: \"task-manager-d42e0.firebaseapp.com\",\n  databaseURL: \"https://task-manager-d42e0.firebaseio.com\",\n  projectId: \"task-manager-d42e0\",\n  storageBucket: \"task-manager-d42e0.appspot.com\",\n  messagingSenderId: \"440530895907\"\n};\nfirebase.initializeApp(config);\nfirebase.firestore().settings({});\n\nexport default firebase;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reactReduxFirebase(fbConfig,\n      { \n        userProfile: 'users',\n        useFirestoreForProfile: true,\n        attachAuthIsReady: true \n      }),\n    reduxFirestore(fbConfig)\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n  serviceWorker.register();\n});\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}